name: CI

on:
  push:
    branches:
      - master
  pull_request:

permissions:
  contents: read

env:
  go-version: "1.17.6"

jobs:
  test:
    runs-on: ubuntu-22.04
    container:
      image: golang:1.17.6
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: mattermod
          MYSQL_DATABASE: mattermod
          MYSQL_USER: mattermod
          MYSQL_PASSWORD: mattermod
        ports:
          - 3306:3306
        # needed because the mysql container does not provide a healthcheck
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10
    steps:
      - uses: actions/checkout@v3
      - name: Run tests
        run: make test

  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.go-version }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.50.1

  chart-testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@96f53100ba2a5449eb71d2e6604bbcd94b9449b5 #v3.5.3
      - name: Helm Setup
        uses: azure/setup-helm@a517f2ff6560563a369e16ca7c7d136b6164423f #v2.0
        with:
          version: v3.12.1
      - name: Setup chart-testing
        uses: helm/chart-testing-action@2fffad315319f278a64ba2e94505768bd9e2a633 #v2.4.0
      - name: Run chart-testing (lint)
        run: ct lint --config .chart-testing.yaml --chart-yaml-schema .chart-schema.yaml

  build:
    runs-on: ubuntu-22.04
    needs:
      - test
      - lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.go-version }}

      - name: check assets
        run: |
          make assets
          echo "Checking if 'make assets' was ran after adding files..."
          git diff --exit-code

      - name: check dependencies
        run: make check-deps

      - name: Run build
        run: make build

  build-images:
    runs-on: ubuntu-22.04
    needs:
      - build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build mattermod
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile
          push: false
          tags: mattermost/mattermod:dirty

      - name: Build jobserver
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile.jobserver
          push: false
          tags: mattermost/mattermod-jobserver:durty

