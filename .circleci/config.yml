version: 2.1

orbs:
  tools: gotest/tools@0.0.13

executors:
  default:
    docker:
      - image: circleci/golang:1.16

jobs:
  lint:
    executor:
      name: default
    steps:
      - checkout
      - tools/install-golangci-lint:
          version: "1.42.0"
      - run: make check-style

  build:
    executor:
      name: default
    steps:
      - checkout
      - run:
          command: |
            make assets
            echo "Checking if 'make assets' was ran after adding files..."
            git diff --exit-code
      - run: make build

  check-dependencies:
    executor:
      name: default
    steps:
      - checkout
      - run:
          name: Check unused Go dependencies
          command: |
            go mod tidy -v
            if [[ -n $(git --no-pager diff --exit-code go.mod go.sum) ]]; then echo "There are unused dependencies that should be removed. Please execute `go mod tidy` to fix it."; exit 1; fi

  test:
    docker:
      - image: circleci/golang:1.16
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: mattermod
          MYSQL_DATABASE: mattermod
          MYSQL_USER: mattermod
          MYSQL_PASSWORD: mattermod
    steps:
      - checkout
      - run:
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run: make test

  docker:
    parameters:
      target:
        type: string
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build docker image
          command: |
            if [ -z "<<parameters.target>>" ]; then
              echo "'target' is missing"
              exit 1
            fi
            if [ "<<parameters.target>>" == "pr" ]; then
              export TAG_NAME=$(echo "${CIRCLE_SHA1}" | cut -c1-8)
              DOCKER_TAG=${TAG_NAME} make docker
            else
              echo ${DOCKER_PASSWORD} | docker login --username ${DOCKER_USERNAME} --password-stdin
              if [ "<<parameters.target>>" == "edge" ]; then
                DOCKER_TAG=edge make docker push
              elif [ "<<parameters.target>>" == "latest" ]; then
                export TAG_NAME=$(echo "${CIRCLE_TAG}" | tr -d 'v')
                DOCKER_TAG=${TAG_NAME} make docker push
                DOCKER_TAG=latest make docker push
              fi
            fi

workflows:
  version: 2
  untagged-build:
    jobs:
      - lint
      - check-dependencies
      - build:
          requires:
            - lint
            - check-dependencies
      - test:
          requires:
            - build
      - docker:
          name: docker-pr
          context: matterbuild-docker
          target: pr
          requires:
            - test
          filters:
            branches:
              ignore: master
      - docker:
          name: docker-edge
          context: matterbuild-docker
          target: edge
          requires:
            - test
          filters:
            branches:
              only: master

  release-build:
    jobs:
      - docker:
          name: docker-latest
          context: matterbuild-docker
          target: latest
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
